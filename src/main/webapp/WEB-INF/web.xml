<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://java.sun.com/xml/ns/javaee"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                        http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
        id="WebApp_ID" version="3.0">

  <!-- 加载spring容器 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext-*.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- 配置springmvc的dispatchServlet的处理类 -->
  <servlet>
    <servlet-name>srpingDispatherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 配置DispatchServlet的初始化参数,加载配置文件(配置处理映射器,适配器)springmvc配置文件的位置和名称 -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring-mvc.xml</param-value>
    </init-param>

    <!-- 可以自定义servlet.xml配置文件的位置和名称，默认为WEB-INF目录下，名称为-->
    <!--[<servlet-name>]-servlet.xml，如SpringMVC-servlet.xml -->
    <!-- <init-param>
       <param-name>contextConfigLocation</param-name>
       <param-value>/WEB-INF/SpringMVC-servlet.xml</param-value>
    </init-param> -->
    <load-on-startup>1</load-on-startup>
  </servlet>

  <filter>
    <filter-name>EncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>EncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- 配置springmvc的DispathServlet的映射匹配URL -->
  <servlet-mapping>
    <servlet-name>srpingDispatherServlet</servlet-name>
    <!--
        第一种: *.action，访问以.action结尾 由DispatcherServlet进行解析
        第二种: /. 所有访问的地址都由DispatcherServlet进行解析，对于静态文件的解析需要配置不让DispatcherServlet进行解析
        第三种: /*  这种配置不对，使用这种配置，最终要转发到一个jsp页面时,仍然会由DispatcherServlet解析jsp地址，不能根据jsp页面找到handler，会报错
     -->
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>
  !— 错误页面配置,这里只是简单的配置了一下 -->

</web-app>